{
  "hash": "c3dc50f2db627c67f10a34537ef726f6",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"In-class_Exercise 1\"\nauthor: \"Qu JunJie\"\ndate: \"20 Aug 2024\"\ndate-modified: \"last-modified\"\nexecute: \n  eval: true\n  echo: true\n  message: false\n  freeze: true\nformat: \n  html:\n    code-fold: true\n---\n\n\n# Getting started\n\n-   Launch the coursework project with RStudio\n\n-   Create a new folder called *In-class_Ex*.\n\n-   Create a new sub-folder inside the newly created *In-class_Ex* folder. Name the sub-folder *In-class_Ex01*.\n\n-   Create a new Quarto document. Save the newly create qmd file in In-class_Ex01 sub-folder. Call the file *In-class_Ex01*.\n\n# Loading the R packages\n\nFor the purpose of this in-class exercise, the following R packages will be used:\n\n-   [tidyverse](https://www.tidyverse.org/)\n\n-   [sf](https://r-spatial.github.io/sf/)\n\n-   [tmap](https://r-tmap.github.io/tmap/)\n\n-   [ggstatsplot](https://indrajeetpatil.github.io/ggstatsplot/)\n\nWrite a code chunk to check if these two packages have been installed in R. If yes, load them in R environment.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(tidyverse, sf, tmap, ggstatsplot)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nInstalling package into 'C:/Users/cttdn/AppData/Local/R/win-library/4.3'\n(as 'lib' is unspecified)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nalso installing the dependencies 'glue', 'rlang'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: unable to access index for repository http://www.stats.ox.ac.uk/pub/RWin/bin/windows/contrib/4.3:\n  cannot open URL 'http://www.stats.ox.ac.uk/pub/RWin/bin/windows/contrib/4.3/PACKAGES'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\npackage 'glue' successfully unpacked and MD5 sums checked\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: cannot remove prior installation of package 'glue'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in file.copy(savedcopy, lib, recursive = TRUE): problem copying\nC:\\Users\\cttdn\\AppData\\Local\\R\\win-library\\4.3\\00LOCK\\glue\\libs\\x64\\glue.dll to\nC:\\Users\\cttdn\\AppData\\Local\\R\\win-library\\4.3\\glue\\libs\\x64\\glue.dll:\nPermission denied\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: restored 'glue'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\npackage 'rlang' successfully unpacked and MD5 sums checked\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: cannot remove prior installation of package 'rlang'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in file.copy(savedcopy, lib, recursive = TRUE): problem copying\nC:\\Users\\cttdn\\AppData\\Local\\R\\win-library\\4.3\\00LOCK\\rlang\\libs\\x64\\rlang.dll\nto C:\\Users\\cttdn\\AppData\\Local\\R\\win-library\\4.3\\rlang\\libs\\x64\\rlang.dll:\nPermission denied\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: restored 'rlang'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\npackage 'ggstatsplot' successfully unpacked and MD5 sums checked\n\nThe downloaded binary packages are in\n\tC:\\Users\\cttdn\\AppData\\Local\\Temp\\RtmpywhaGw\\downloaded_packages\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nggstatsplot installed\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: package 'ggstatsplot' was built under R version 4.3.3\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in pacman::p_load(tidyverse, sf, tmap, ggstatsplot): Failed to install/load:\nggstatsplot\n```\n\n\n:::\n:::\n\n\n# Working with Master Plan Planning Sub-zone Data\n\n-   Create a sub-folder called data in In-class_Ex01 folder.\n\n-   If necessary visit data.gov.sg and download *Master Plan 2014 Subzone Boundary (Web)* from the portal. You are required to download both the ESRI shapefile and kml file.\n\n-   Write a code chunk to import *Master Plan 2014 Subzone Boundary (Web)* in shapefile and kml save them in sf simple features data frame.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz14_shp <- st_read(dsn = \"data/\",\n                      layer = \"MP14_SUBZONE_WEB_PL\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `D:\\SMUJunJie\\ISSS626-GAA\\In-class_Ex\\In-class_Ex01\\data' using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmpzsz14_kml <- st_write(mpsz14_shp, \n                \"data/MasterPlan2014SubzoneBoundaryWebKML.kml\",\n                delete_dsn = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nDeleting source `data/MasterPlan2014SubzoneBoundaryWebKML.kml' using driver `KML'\nWriting layer `MasterPlan2014SubzoneBoundaryWebKML' to data source \n  `data/MasterPlan2014SubzoneBoundaryWebKML.kml' using driver `KML'\nWriting 323 features with 15 fields and geometry type Multi Polygon.\n```\n\n\n:::\n:::\n\n\n# Working with Master Plan Planning Sub-zone Data\n\n1.  Write a code chunk to export *mpsz14_shp* sf data.frame into **kml** file save the output in data sub-folder. Name the output file *MP14_SUBZONE_WEB_PL*.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nst_write(mpsz14_shp, \n         \"data/MP14_SUBZONE_WEB_PL.kml\",\n         delete_dsn = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nDeleting source `data/MP14_SUBZONE_WEB_PL.kml' using driver `KML'\nWriting layer `MP14_SUBZONE_WEB_PL' to data source \n  `data/MP14_SUBZONE_WEB_PL.kml' using driver `KML'\nWriting 323 features with 15 fields and geometry type Multi Polygon.\n```\n\n\n:::\n:::\n\n\n# Working with Pre-school Location Data\n\n-   If necessary visit data.gov.sg and download *Pre-Schools Location* from the portal. You are required to download both the kml and geojson files.\n\n-   Write a code chunk to import *Pre-Schools Location* in kml geojson save them in sf simple features data frame.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npreschool_kml <- st_read(\"data/PreSchoolsLocation.kml\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `PRESCHOOLS_LOCATION' from data source \n  `D:\\SMUJunJie\\ISSS626-GAA\\In-class_Ex\\In-class_Ex01\\data\\PreSchoolsLocation.kml' \n  using driver `KML'\nSimple feature collection with 2290 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6878 ymin: 1.247759 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npreschool_geojson <- st_read(\"data/PreSchoolsLocation.geojson\") \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `PreSchoolsLocation' from data source \n  `D:\\SMUJunJie\\ISSS626-GAA\\In-class_Ex\\In-class_Ex01\\data\\PreSchoolsLocation.geojson' \n  using driver `GeoJSON'\nSimple feature collection with 2290 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6878 ymin: 1.247759 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n:::\n\n\n# Working with Master Plan 2019 Subzone Boundary Data\n\n-   Visit data.gov.sg and download *Master Plan 2019 Subzone Boundary (No Sea)* from the portal. You are required to download both the kml file.\n\n-   Move *MPSZ-2019* shapefile provided for In-class Exercise 1 folder on elearn to data sub-folder of In-class_Ex02.\n\n-   Write a code chunk to import *Master Plan 2019 Subzone Boundary (No SEA)* kml and MPSZ-2019 into sf simple feature data.frame.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz19_shp <- st_read(dsn = \"data/\",\n                layer = \"MPSZ-2019\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `MPSZ-2019' from data source \n  `D:\\SMUJunJie\\ISSS626-GAA\\In-class_Ex\\In-class_Ex01\\data' using driver `ESRI Shapefile'\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz19_kml <- st_read(\"data/MasterPlan2019SubzoneBoundaryNoSeaKML.kml\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `URA_MP19_SUBZONE_NO_SEA_PL' from data source \n  `D:\\SMUJunJie\\ISSS626-GAA\\In-class_Ex\\In-class_Ex01\\data\\MasterPlan2019SubzoneBoundaryNoSeaKML.kml' \n  using driver `KML'\nSimple feature collection with 332 features and 2 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY, XYZ\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n:::\n\n\n# Handling Coordinate Systems\n\n### Checking coordinate system\n\nWrite a code chunk to check the project of the imported sf objects.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nst_crs(mpsz19_shp)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCoordinate Reference System:\n  User input: WGS 84 \n  wkt:\nGEOGCRS[\"WGS 84\",\n    DATUM[\"World Geodetic System 1984\",\n        ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n            LENGTHUNIT[\"metre\",1]]],\n    PRIMEM[\"Greenwich\",0,\n        ANGLEUNIT[\"degree\",0.0174532925199433]],\n    CS[ellipsoidal,2],\n        AXIS[\"latitude\",north,\n            ORDER[1],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        AXIS[\"longitude\",east,\n            ORDER[2],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n    ID[\"EPSG\",4326]]\n```\n\n\n:::\n:::\n\n\n### Transforming coordinate system\n\nRe-write the code chunk to import the Master Plan Sub-zone 2019 and Pre-schools Location with proper transformation\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz19_shp <- st_read(dsn = \"data/\",\n                layer = \"MPSZ-2019\") %>%\n  st_transform(crs = 3414)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `MPSZ-2019' from data source \n  `D:\\SMUJunJie\\ISSS626-GAA\\In-class_Ex\\In-class_Ex01\\data' using driver `ESRI Shapefile'\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npreschool <- st_read(\"data/PreSchoolsLocation.kml\") %>%\n  st_transform(crs = 3414)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `PRESCHOOLS_LOCATION' from data source \n  `D:\\SMUJunJie\\ISSS626-GAA\\In-class_Ex\\In-class_Ex01\\data\\PreSchoolsLocation.kml' \n  using driver `KML'\nSimple feature collection with 2290 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6878 ymin: 1.247759 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n:::\n\n\n# Geospatial Data Wrangling\n\n### Point-in-Polygon count\n\nWrite a code chunk to count the number of pre-schools in each planning sub-zone.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz19_shp <- mpsz19_shp %>%\n  mutate(`PreSch Count` = lengths(\n    st_intersects(mpsz19_shp, preschool)))\n```\n:::\n\n\n### Computing density\n\nWrite a single line code to perform the following tasks:\n\n1.  Derive the area of each planning sub-zone.\n\n2.  Drop the unit of measurement of the area (i.e. m\\^2)\n\n3.  Calculate the density of pre-school at the planning sub-zone level.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz19_shp <- mpsz19_shp %>%\n  mutate(Area = units::drop_units(\n    st_area(.)),\n    `PreSch Density` = `PreSch Count` / Area * 1000000\n  )\n```\n:::\n\n\n# Statistical Analysis\n\nUsing appropriate Exploratory Data Analysis (EDA) and Confirmatory Data Analysis (CDA) methods to explore and confirm the statistical relationship between Pre-school Density and Pre-school count.\n\nTip: Refer to [`ggscatterstats()`](https://indrajeetpatil.github.io/ggstatsplot/articles/web_only/ggscatterstats.html) of **ggstatsplot** package.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz19_shp$`PreSch Density` <- as.numeric(as.character(mpsz19_shp$`PreSch Density`))\nmpsz19_shp$`PreSch Count` <- as.numeric(as.character(mpsz19_shp$`PreSch Count`)) \nmpsz19_shp <- as.data.frame(mpsz19_shp)\n\nggplot(data = mpsz19_shp,\n               x = `PreSch Density`,\n               y = `PreSch Count`,\n               type = \"parametric\")\n```\n\n::: {.cell-output-display}\n![](In-class_Ex01_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\n![](images/clipboard-1703350156.png)\n\n# Working with Population Data\n\n1.  Visit and extract the latest Singapore Residents by Planning Area / Subzone, Age Group, Sex and Type of Dwelling from Singstat homepage.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npopdata <- read_csv(\"data/respopagesextod2023.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 100928 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (5): PA, SZ, AG, Sex, TOD\ndbl (2): Pop, Time\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n:::\n\n\n# Data Wrangling\n\n1.  Write a code chunk to prepare a data.frame showing population by Planning Area and Planning subzone\n\n\n::: {.cell}\n\n```{.r .cell-code}\npopdata2023 <- popdata %>% \n  group_by(PA, SZ, AG) %>% \n  summarise(`POP`=sum(`Pop`)) %>%  \n  ungroup() %>% \n  pivot_wider(names_from=AG,\n              values_from = POP)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`summarise()` has grouped output by 'PA', 'SZ'. You can override using the\n`.groups` argument.\n```\n\n\n:::\n\n```{.r .cell-code}\ncolnames(popdata2023)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"PA\"          \"SZ\"          \"0_to_4\"      \"10_to_14\"    \"15_to_19\"   \n [6] \"20_to_24\"    \"25_to_29\"    \"30_to_34\"    \"35_to_39\"    \"40_to_44\"   \n[11] \"45_to_49\"    \"50_to_54\"    \"55_to_59\"    \"5_to_9\"      \"60_to_64\"   \n[16] \"65_to_69\"    \"70_to_74\"    \"75_to_79\"    \"80_to_84\"    \"85_to_89\"   \n[21] \"90_and_Over\"\n```\n\n\n:::\n:::\n\n\n## Data Processing\n\nWrite a code chunk to derive a tibble data.framewith the following fields PA, SZ, YOUNG, ECONOMY ACTIVE, AGED, TOTAL, DEPENDENCY where by:\n\n-   YOUNG: age group 0 to 4 until age groyup 20 to 24,\n\n-   ECONOMY ACTIVE: age group 25-29 until age group 60-64,\n\n-   AGED: age group 65 and above,\n\n-   TOTAL: all age group, and\n\n-   DEPENDENCY: the ratio between young and aged against economy active group.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npopdata2023 <- popdata2023 %>%\n  mutate(YOUNG=rowSums(.[3:6]) # Aged 0 - 24, 10 - 24\n         +rowSums(.[14])) %>% # Aged 5 - 9\n  mutate(`ECONOMY ACTIVE` = rowSums(.[7:13])+ # Aged 25 - 59\n  rowSums(.[15])) %>%  # Aged 60 -64\n  mutate(`AGED`=rowSums(.[16:21])) %>%\n  mutate(`TOTAL`=rowSums(.[3:21])) %>%\n  mutate(`DEPENDENCY`=(`YOUNG` + `AGED`)\n  / `ECONOMY ACTIVE`) %>% \n  select(`PA`, `SZ`, `YOUNG`, \n         `ECONOMY ACTIVE`, `AGED`,\n         `TOTAL`, `DEPENDENCY`)\n```\n:::\n\n\n## Joining popdata2023 and mpsz19_shp\n\n\n::: {.cell}\n\n```{.r .cell-code}\npopdata2023 <- popdata2023 %>%\n  mutate_at(.vars = vars(PA, SZ), \n          .funs = list(toupper)) \nmpsz_pop2023 <- left_join(mpsz19_shp, popdata2023,\n                          by = c(\"SUBZONE_N\" = \"SZ\"))\npop2023_mpsz <- left_join(popdata2023, mpsz19_shp, \n                          by = c(\"SZ\" = \"SUBZONE_N\"))\n```\n:::\n\n\n## Choropleth Map of Dependency Ratio by Planning Subzone\n\n![](images/clipboard-2211194703.png)\n\n## Analytical Map: Percentile Map\n\n### The concept\n\nThe percentile map is a special type of quantile map with six specific categories: 0-1%,1-10%, 10-50%,50-90%,90-99%, and 99-100%. The corresponding breakpoints can be derived by means of the base R quantile command, passing an explicit vector of cumulative probabilities as c(0,.01,.1,.5,.9,.99,1). Note that the begin and endpoint need to be included.\n\n### Step 1: Data Preparation\n\nThe code chunk below excludes records with NA by using the code chunk below.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz_pop2023 <- mpsz_pop2023 %>%\n  drop_na()\n```\n:::\n\n\n### Step 2: The get function\n\nThe code chunk below defines a function to get the input data and field to be used for creating the percentile map.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nget.var <- function(vname,df) {\n  v <- df[vname] %>% \n    st_set_geometry(NULL)\n  v <- unname(v[,1])\n  return(v)\n}\n```\n:::\n\n\n### Step 3: A percentile mapping function\n\nThe code chunk below creates a function for computing and plotting the percentile map.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npercentmap <- function(vnam, df, legtitle=NA, mtitle=\"Percentile Map\"){\n  percent <- c(0,.01,.1,.5,.9,.99,1)\n  var <- get.var(vnam, df)\n  bperc <- quantile(var, percent)\n  tm_shape(mpsz_pop2023) +\n  tm_polygons() +\n  tm_shape(df) +\n     tm_fill(vnam,\n             title=legtitle,\n             breaks=bperc,\n             palette=\"Blues\",\n          labels=c(\"< 1%\", \"1% - 10%\", \"10% - 50%\", \"50% - 90%\", \"90% - 99%\", \"> 99%\"))  +\n  tm_borders() +\n  tm_layout(main.title = mtitle, \n            title.position = c(\"right\",\"bottom\"))\n}\n```\n:::\n\n\n### Step 4: Running the functions\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#percentmap(\"DEPENDENCY\", mpsz_pop2023)\n```\n:::\n\n\n![](images/clipboard-224480636.png)\n\n## Analytical Map: Box Map\n\n### The Concept\n\nIn essence, a box map is an augmented quartile map, with an additional lower and upper category. When there are lower outliers, then the starting point for the breaks is the minimum value, and the second break is the lower fence. In contrast, when there are no lower outliers, then the starting point for the breaks will be the lower fence, and the second break is the minimum value (there will be no observations that fall in the interval between the lower fence and the minimum value).\n\n### Step 1: Creating the boxbreaks function\n\nThe code chunk on the right is an R function that creating break points for a box map.\n\n-   arguments:\n\n    -   v: vector with observations\n\n    -   mult: multiplier for IQR (default 1.5)\n\n-   returns:\n\n    -   bb: vector with 7 break points compute quartile and fences\n\n### Step 2: Creating the get.var function\n\nThe code chunk on the right an R function to extract a variable as a vector out of an sf data frame.\n\n-   arguments:\n\n    -   vname: variable name (as character, in quotes)\n\n    -   df: name of sf data frame\n\n-   returns:\n\n    -   v: vector with values (without a column name)\n\n### Step 3: Boxmap function\n\nThe code chunk on the right is an R function to create a box map.\n\n-   arguments:\n\n    -   vnam: variable name (as character, in quotes)\n\n    -   df: simple features polygon layer\n\n    -   legtitle: legend title\n\n    -   mtitle: map title\n\n    -   mult: multiplier for IQR\n\n-   returns:\n\n    -   a tmap-element (plots a map)\n\n### Step 4: Plotting Box Map\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#boxmap(\"DEPENDENCY\", mpsz_pop2023)\n```\n:::\n\n\n![](images/clipboard-2270778185.png)\n\n### Plotting Interactive Box Map\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_options(check.and.fix = TRUE)\ntmap_mode(\"view\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\ntmap mode set to interactive viewing\n```\n\n\n:::\n\n```{.r .cell-code}\n#boxmap(\"DEPENDENCY\", mpsz_pop2023)\n```\n:::\n",
    "supporting": [
      "In-class_Ex01_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}